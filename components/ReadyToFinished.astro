---
export interface Props {
	duration: string;
}
const { duration } = Astro.props;
const name="vtbot-ready-to-finished";
---

<span id={name} style={`view-transition-name: ${name}`} data-vtbot-ready-to-finished-duration={duration}></span>
<style is:global>
	@keyframes vtbot-ready-to-finished {
	}
	::view-transition-old(vtbot-ready-to-finished),
	::view-transition-group(vtbot-ready-to-finished) {
		animation: none;
	}
	::view-transition-new(vtbot-ready-to-finished) {
		animation-name: vtbot-ready-to-finished;
		animation-duration: 0s;
		animation-delay: var(--vtbot-ready-to-finished-duration);
	}
	[data-astro-transition-fallback='new'] #vtbot-ready-to-finished {
		animation: vtbot-ready-to-finished 0s var(--vtbot-ready-to-finished-duration);
	}
</style>
<script>
	import { TRANSITION_AFTER_SWAP } from 'astro:transitions/client';

	document.addEventListener(TRANSITION_AFTER_SWAP, () => {
		document.documentElement.style.setProperty('--vtbot-ready-to-finished-duration', document.querySelector<HTMLSpanElement>("[data-vtbot-ready-to-finished-duration]")?.dataset.vtbotReadyToFinishedDuration || '0s');
	});
</script>
